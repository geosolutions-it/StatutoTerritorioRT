
// Crea colori di base per app serapide text, btn, bg, border
// di default si usa il warning per il comune, 
// si possono creare varianti, usanto una classe wrapper per il tipo

@mixin serapide-color ($color){
    @include text-emphasis-variant(".text-serapide", $color );
    @include bg-variant(".bg-serapide", $color);
    @include bg-gradient-variant(".bg-gradient-serapide", $color);
    .btn-serapide{
        @include button-variant($color, $color);
    }
    .border-serapide {
        border-color: $color !important;
    }  
}

@include serapide-color($warning);

.ruolo-regione {
    @include serapide-color(#09D7F2);
}
.ruolo-vas {
    @include serapide-color(#FA2AB3);
}

.content {
    min-height: calc(100vh - 196px);
    // padding-bottom: $portal-header;
    padding-top: $portal-header;

}
/** colori notifiche**/
.icon-34 {
    font-size: 34px;
}
.icon-16 {
    font-size: 16px;
}
.icon-14 {
    font-size: 14px;
}
.icon-12 {
    font-size: 12px;
}
.first {
    order: -1;
}
.nessuna {
    color: $success;
}
.urgente {
    color: $danger;
}
.importante {
    color: $indigo;
}
.prossimamente{
    color: $cyan
}
.legenda {
    i {
        font-size: 18px;
    }
    span {
        font-size: 60%;
        width: 100px;
    }
    font-size:70%;
}
.vertical-divider-left {
    border-left: 1px solid rgba(255,255,255, 0.8);
}
.vertical-divider-right {
    border-right: 1px solid rgba(255,255,255, 0.8);
}
@at-root  .rt-logo {
    height: $portal-header;
}
.pX{
    @each $breakpoint in map-keys($grid-breakpoints) {
        $next: breakpoint-next($breakpoint, $grid-breakpoints);
        $infix: breakpoint-infix($next, $grid-breakpoints);
        &#{$infix} {
            @include media-breakpoint-up($next) {
                padding-left: $portal-header * 2  !important;
                padding-right: $portal-header * 2 !important;
            }
        }
    }
}
.serapide-content {
    
}
.serapide {
    width: 100%;
    .pointer{
        cursor: pointer;
    }
    .tipo__{
    
    &option {
        font-size: 80%;
        border-bottom: 1px solid $gray-300;
            &:hover, &--is-focused {
                background-color: $gray-400;
        }
        &--is-selected {
            background-color: $gray-200;
            color: $black;
        }
        &:focus{
            background-color: $gray-200;
        }
    }
    &menu-list {
        text-transform: capitalize;
        padding-top:0px;
        padding-bottom:0px;
    }
    &control {
        font-size: 80%;
        &--is-focused, &:hover {
            border-color: $gray-300;
            box-shadow: 0 0 0 1px $gray-700;
        }
    }

}
}
a {
    outline: none;
    &:hover {
        text-decoration: none !important;
    }
}
.big-text {
    font-size: 100px;
    font-weight: 700;
    line-height: 100px;
}
.medium-text {
    font-size: 40px;
    font-weight: 400;
    line-height: 48px;
}
.wrap-text {
    word-wrap: break-word;
}
.first-section-row {
    padding-left: 120px;
    padding-right: 120px;
}
.second-section-row {
    padding-left: 100px;
    padding-right: 100px;
}
.third-section-row {
    padding-left: 80px;
    padding-right: 80px;
}
.section-row {
    padding-left: 60px;
    padding-right: 60px;
}
.icon-col {
    border-right: 8px solid yellow;
}
.home-icon {
    font-size: 48px;
}
.bg-pink {
    background-color: #e1e1e1;
}
.bg-serapide-grey {
    background-color: $serapide-grey;
}
.open-panel-btn {
    position: absolute;
    right: 20px;
    bottom: 15px;
}
.close-panel-btn {
    position: absolute;
    right: 2px;
    top: 2px;
}

@include media-breakpoint-down(md) {
    .content{
        padding-top: $portal-header - 4;
    }
    .big-text {
        font-size: 30px;
    }
    .medium-text {
        font-size: 15px;
    }
}
.serapide {
    .flex-eql {
        flex: 1 1 0%;
    }
    .Toastify__toast {
        border-radius: 8px;
    }
}

.add-contact {
    .ente-sel {
        min-width: 200px
    }
    .form-control {
        width: auto;
        min-width: 200px
    }
    i{
        cursor: pointer
    }
    i.disabled {
        cursor: not-allowed;
        color: $gray-400;
    }
}

.serapide {
    button.read-only.btn {
        cursor: not-allowed
    }
}